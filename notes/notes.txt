Composer create -project symfony/skeleton project_name
composer install 


composer require annotations - install annotations first !
symfony console make:controller SomeController
php bin/console make:controller SomeController

to use make:  command you need composer install maker , to install maker you need laminas package first

 #[Route('/movies', name: 'app_movies')]   /// new method
  define global vars in twig.yaml in  section globals : 
 composer require twig 
orm : symfony uses doctrine as orm - obj relation method
 composer require symfony/orm-pack
 composer require symfony/maker-bundle

added to settings.json file under vscodes settings
  "emmet.includeLanguages": {"twig":"html"},

composer require twig ,  $this->render("view.file");
 add this to your settings.json file 
  "emmet.includeLanguages": {"twig":"html"},

DATABASE : uses doctrine as ORM 
create db :  php bin/console doctrine:database:create / drop
DATABASE_URL="mysql://homestead:secret@localhost/syfony_db"  /// .env file required 
 
php bin/console list doctrine : lists all doctrine commands

php bin/console make:entity Movie :: used as a MODEL + repository

php bin/console make:entity Actor 

php bin/console make:entity Movie > open again add property actors > relate with Actor 

to create tables > php bin/console make:migration  > creates migrations 

migration executes raw sql  , clever enough to make relations and drops 

php bin/console doctrine:migrations:migrate > executes

! table names are singular make plural if you want 
! tables override if exists 


relationships :: to define relationship you ve to define first entity again!  
for field type :  
ManyToOne OneToMany ManyToMany OneToOne
what the entity relate to : use other entity

relations read left to right , left word represents current entity

Fixtures:
composer require --dev doctrine/doctrine-fixtures-bundle > adds fixtures to your project
fixtures = seeeder 
 $this->addReference('actor_'.$i,$actor);//adds a relation ref to use in other fixtures 
  $movie->addActor($this->getReference('actor_'.rand(1,12)));// uses an added ref 


  Repository : 
  each entity has a Repository contains functions reach DB , like Model 
  $movies = >$movieRepository->findAll()
  Repository can be reached ove EntityManagerInterface  ,  $em->getRepository(Entity::class); 
  EntityManagerInterface gives far more functions than Repository

!! create EntityManagerInterface $em in __contruct as private , so you can use in many functions !!!

        //$movies = >$movieRepository->findAll()
       // $movies = $repository->findAll();
      // $movies = $repository->find(17);
      count(['id'=>5])
      getClassName -> returns entity name
     views are returned with render - install twig first

     ASSETS In symfony : 
     composer require symfony/webpack-encore-bundle
     composer require symfony/asset

